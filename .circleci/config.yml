version: 2.1
parameters:
    jdk-image:
      type: string
      default: "cimg/openjdk"  
    jdk-imagetag:
      type: string
      default: "16.0"
    workingdir:
      type: string
      default: "~/project"
    maven-build-cmd:
      type: string
      default: "clean install"
    s3-artifacts-store:
      type: string
      default: "dpr-demo-development-20220916083016121000000001"    

jobs:
  checkout:
    working_directory: << pipeline.parameters.workingdir >>
    docker:
      - image: << pipeline.parameters.jdk-image >>:<< pipeline.parameters.jdk-imagetag >>
    steps:
      - checkout
      - run:
          name: Check Java Version
          command: |
            java --version;
            echo $CIRCLE_PROJECT_REPONAME
      - persist_to_workspace:
          root: << pipeline.parameters.workingdir >>
          paths:
            - .

  tests:
    docker:
      - image: << pipeline.parameters.jdk-image >>:<< pipeline.parameters.jdk-imagetag >>
    steps:
      - attach_workspace:
          at: << pipeline.parameters.workingdir >>
      - run:
          name: maven tests
          command: |
            mvn test            

  build:
    docker:
      - image: << pipeline.parameters.jdk-image >>:<< pipeline.parameters.jdk-imagetag >>
    steps:
      - attach_workspace:
          at: << pipeline.parameters.workingdir >>
      - run: 
          name: build
          command: |
            mvn << pipeline.parameters.maven-build-cmd >>   
      - persist_to_workspace:
          root: << pipeline.parameters.workingdir >>
          paths:
            - .

  deploy-dev:
    machine:
      enabled: true    
    steps:
      - when:
          condition:
            equal: [ DPR-100-HW, << pipeline.git.branch >> ]
          steps:          
            - run:
                name: notification
                command: echo "Deploy Artifacts to DEV"
      - when:
          condition:
            equal: [ DPR-100-HW, << pipeline.git.branch >> ]  
          steps:
            - attach_workspace:
                at: << pipeline.parameters.workingdir >>            
            - run:
                name: Deploy
                command: |
                  aws s3 sync target s3://<< pipeline.parameters.s3-artifacts-store >>/artifacts --exclude "*" --include "hello-world*.jar" --region eu-west-2
     
  release:
    machine:
      enabled: true    
    steps:
      - when:
          condition:
            equal: [ release, << pipeline.git.branch >> ]
          steps:          
            - run:
                name: notification
                command: echo "Release Artifacts, if the branch is MAIN"
      - when:
          condition:
            equal: [ release, << pipeline.git.branch >> ]  
          steps:
            - run:
                name: Deploy
                command: |
                  aws s3 sync target s3://<< pipeline.parameters.s3-artifacts-store >>/artifacts --exclude "*" --include "hello-world*.jar" --region eu-west-2
                
workflows:
  version: 2
  build:
    jobs:
      - checkout:
          name: "checkout"
      - tests:
          requires:
            - checkout             
      - build:
          context:
            - digital-prison-reporting-dev
          requires:
            - tests
      - deploy-dev:
          context:
            - digital-prison-reporting-dev
          requires:
            - build
      - release:
          context:
            - digital-prison-reporting-release
          requires:
            - build
            - deploy-dev                    