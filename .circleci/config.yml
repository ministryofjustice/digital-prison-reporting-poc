version: 2.1

orbs:
    semver-orb: tv2norge/semver-orb@0.0.1

parameters:
    jdk-image:
      type: string
      default: "cimg/openjdk"  
    jdk-imagetag:
      type: string
      default: "16.0"
    workingdir:
      type: string
      default: "~/project"
    maven-build-cmd:
      type: string
      default: "clean install"
    s3-artifacts-store:
      type: string
      default: "dpr-demo-development-20220916083016121000000001"
    aws-region:
      type: string
      default: "eu-west-2"        

jobs:
  version:
    executor: semver-orb/default
    steps:
      - semver-orb/setup
      - semver-orb/print
    #  - semver-orb/tagnext
      - semver-orb/print
      - run: 
          name: Verify Release Version
          command: |
            echo "version checks: "; echo $SEMVER_VERSION; echo SEMVER_VER="$SEMVER_VERSION" >> "${BASH_ENV}"
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: << pipeline.parameters.workingdir >>
          paths:
            - bash.env


  checkout:
    working_directory: << pipeline.parameters.workingdir >>  
    docker:
      - image: << pipeline.parameters.jdk-image >>:<< pipeline.parameters.jdk-imagetag >>     
    steps:
      - checkout
      - attach_workspace:
          at: << pipeline.parameters.workingdir >>      
      - run: |
          cat bash.env > $BASH_ENV      
      - run:
          name: Check Java Version
          command: |
            java --version;
            echo "Printing SEM VERSION"
            echo $SEMVER_VER
            echo $CIRCLE_PROJECT_REPONAME
      - persist_to_workspace:
          root: << pipeline.parameters.workingdir >>
          paths:
            - .

  tests:
    docker:
      - image: << pipeline.parameters.jdk-image >>:<< pipeline.parameters.jdk-imagetag >>
    steps:
      - attach_workspace:
          at: << pipeline.parameters.workingdir >>
      - run:
          name: maven tests
          command: |
            mvn test            

  build:
    docker:
      - image: << pipeline.parameters.jdk-image >>:<< pipeline.parameters.jdk-imagetag >>
    steps:
      - attach_workspace:
          at: << pipeline.parameters.workingdir >>
      - run: 
          name: build
          command: |
            mvn -N clean install;
            cd digital-prisons-reporting; mvn -N clean install;
            cd .. ; cd common; mvn clean install;
            cd .. ; cd cloud-platform; mvn clean install
      - persist_to_workspace:
          root: << pipeline.parameters.workingdir >>
          paths:
            - .

  deploy-dev:
    machine:
      enabled: true    
    steps:
      - when:
          condition:
            equal: [ DPR-100-HW, << pipeline.git.branch >> ]
          steps:          
            - run:
                name: notification
                command: echo "Deploy Artifacts to DEV"
      - when:
          condition:
            equal: [ DPR-100-HW, << pipeline.git.branch >> ]  
          steps:
            - attach_workspace:
                at: << pipeline.parameters.workingdir >>            
            - run:
                name: Deploy
                command: |
                  aws s3 sync target s3://<< pipeline.parameters.s3-artifacts-store >>/artifacts/$CIRCLE_PROJECT_REPONAME/ --exclude "*" --include "hello-world*.jar" --region << pipeline.parameters.aws-region >>
     
  release:
    machine:
      enabled: true    
    steps:
      - attach_workspace:
          at: << pipeline.parameters.workingdir >>        
      - run: 
          name: notification
          command: echo "Release Artifacts, if the branch is RELEASE"
      - run:
          name: Release
          command: |
            aws s3 sync target s3://<< pipeline.parameters.s3-artifacts-store >>/artifacts --exclude "*" --include "hello-world*.jar" --region << pipeline.parameters.aws-region >>

workflows:
  version: 2
  build:
    jobs:
      - version:
          name: "version"  
      - checkout:
          name: "checkout"
          requires:
            - version          
#      - tests:
#          requires:
#            - checkout             
      - build:
          context:
            - digital-prison-reporting-dev
#          requires:
#            - tests
      - deploy-dev:
          context:
            - digital-prison-reporting-dev
          requires:
            - build
      - release:
          context:
            - digital-prison-reporting-release
          requires:
            - build
            - deploy-dev
          filters:
            branches:
              only:
                - release                          


